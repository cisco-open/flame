syntax = "proto3";

package grpcNotification;
option go_package = "github.com/cisco/fledge/pkg/proto/notification";

////////////////////////////////////////////////////////////////////////////////
// Definitions for EventRoute
////////////////////////////////////////////////////////////////////////////////

// EventRoute service defines communication between agent and notifier
service EventRoute {
  // This implements a server side streaming RPC
  rpc GetEvent(AgentInfo) returns (stream Event) {}
}

enum EventType {
  UNKNOWN_EVENT_TYPE = 0; // default
  START_JOB = 1;
  STOP_JOB = 2;
  UPDATE_JOB = 3;
}

message AgentInfo {
  string id = 1;
  string hostname = 2;
}

message Event {
  EventType type = 1;
  string job_id = 2;
}

////////////////////////////////////////////////////////////////////////////////
// Definitions for TriggerRoute
////////////////////////////////////////////////////////////////////////////////

// TriggerRoute service defines communication between controller and notifier
service TriggerRoute {
  rpc Notify(EventRequest) returns (Response) {}
}

message EventRequest {
  EventType type = 1;
  string job_id = 2;
  repeated string agent_ids = 3;
}

message Response{
  enum Status {
    ERROR = 0; // default
    PARTIAL_SUCCESS = 1; // e.g., not all agents received event
    SUCCESS = 2;
  }
  Status status = 1;
  string message = 2;
  repeated string failed_agents = 3;
}
