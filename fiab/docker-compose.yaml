---
version: '3'
services:
  postgres:
    image: 'postgres'
    container_name: 'postgres'
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow

  mlflow:
    image: 'adacotechjp/mlflow:1.21.0'
    container_name: 'mlflow'
    entrypoint: ""
    command: >
      bash -c "mlflow server
      --backend-store-uri postgresql://mlflow:mlflow@postgres/mlflow
      --default-artifact-root file:./mlruns
      --host 0.0.0.0"
    ports:
      - '5000:5000'
    depends_on: ['postgres']

  database:
    image: 'mongo'
    container_name: 'flame-db'
    volumes:
      - ./mongodata:/data/db
    ports:
      - '27017-27019:27017-27019'

  notifier:
    image: 'flame'
    container_name: 'flame-notifier'
    command: /usr/bin/notifier
    ports:
      - '10101:10101'
    build:
      context: ../
      dockerfile: ./build/Dockerfile.dev

  controller:
    image: 'flame'
    container_name: 'flame-controller'
    # The ""sleep 5"" is to mitigate failure to connect mongodb
    # if controler comes up before mongodb
    # TODO: refactor controller code to retry connection in case of disconnection
    command: >
      bash -c "sleep 5 && /usr/bin/controller"
    ports:
      - '10102:10102'
    volumes:
      - ${PWD}/controller.yaml:/etc/flame/controller.yaml
    depends_on: ['database', 'notifier']

  apiserver:
    image: 'flame'
    container_name: 'flame-apiserver'
    command: /usr/bin/apiserver --controller http://flame-controller:10102
    ports:
      - '10100:10100'
    depends_on: ['controller']

  flamelet1:
    image: 'flame'
    container_name: 'flamelet1'
    volumes:
      - ./mlruns:/mlruns
      - ../:/src/flame
    # NOTE: update FLAME_AGENT_ID based on the task
    #       when a job is first executed, it will fail.
    #       log into controller container and check its logs to identify agent IDs
    #       docker exec -it flame-controller bash
    #       cat /var/log/flame/controller.log | grep "Creating task for agent"
    #       use the IDs returned from the above grep search
    environment:
      FLAME_AGENT_ID: bae7fc3f40b9855116865ae8eeaf372189f0afd4
      LOG_LEVEL: DEBUG
    command: /usr/bin/flamelet --apiserver http://flame-apiserver:10100 --notifier flame-notifier:10101
    ports:
      - '10103:10103'
    depends_on: ['apiserver', 'notifier']

  flamelet2:
    image: 'flame'
    container_name: 'flamelet2'
    volumes:
      - ./mlruns:/mlruns
      - ../:/src/flame
    # NOTE: update FLAME_AGENT_ID based on the task
    environment:
      FLAME_AGENT_ID: e49319394d8a641453fcb7b07ba77a62c6f23635
      LOG_LEVEL: DEBUG
    command: /usr/bin/flamelet --apiserver http://flame-apiserver:10100 --notifier flame-notifier:10101
    ports:
      - '10104:10104'
    depends_on: ['apiserver', 'notifier']

  flamelet3:
    image: 'flame'
    container_name: 'flamelet3'
    volumes:
      - ./mlruns:/mlruns
      - ../:/src/flame
    # NOTE: update FLAME_AGENT_ID based on the task
    environment:
      FLAME_AGENT_ID: 3aa26b0e014a4a66f51003add41d53be4a9d2b71
      LOG_LEVEL: DEBUG
    command: /usr/bin/flamelet --apiserver http://flame-apiserver:10100 --notifier flame-notifier:10101
    ports:
      - '10105:10105'
    depends_on: ['apiserver', 'notifier']
